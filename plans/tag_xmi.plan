<?xml version="1.0" encoding="UTF-8"?>

<alvisnlp-plan id="test-as-d">

  <param name="input">
    <alias module="read" param="source"/>
  </param>
  
  <!-- Read xmi -->
  <read class="XMIImport">
    <source>.</source>
    <ignoreMalformedXMI/>
    <baseNameId/>
  </read>
 
  <!-- Get year -->
  <module id="set-year" class="Action">
    <target>documents[@year == "" and not @date == ""]</target>
    <action>set:feat:year(str:seds(@date,"^(\\d+) .+$","$1"))</action>
    <setFeatures/>
  </module>

   <module id="set-id" class="Action">
    <target>documents[not @DI]</target>
    <action>set:feat:DI(@id)</action>
    <setFeatures/>
  </module>

  <!-- Remove duplicates -->
  <module id="temp-id" class="Action">
    <target>$</target>
    <action>id:enumerate:tempid(documents)</action>
    <setFeatures/>
  </module>
  <module id="tag-uniques" class="Action">
    <target>documents</target>
    <action>set:feat:uniq(not corpus.documents[@DI == target.@DI and target.@tempid > @tempid])</action>
    <setFeatures/>
  </module>
  <module id="remove-duplicates" class="Action">
    <target>documents[@uniq == "false"]</target>
    <action>delete</action>
    <deleteElements/>
  </module>
  
  <module id="renametitle" class="Action">
    <target>documents.sections:title</target>
    <action>set:feat:sectionname("title")</action>
    <setFeatures/>
  </module>
  <module id="renameabstract" class="Action">
    <target>documents.sections:abstract</target>
    <action>set:feat:sectionname("abstract")</action>
    <setFeatures/>
  </module>

  <module id="set-url" class="Action">
    <target>documents</target>
    <action>set:feat:url("http://www.ncbi.nlm.nih.gov/pubmed/" ^ @id)</action>
    <setFeatures/>
  </module>

  <module id="get-first-author" class="Action">
    <target>documents[@AU]</target>
    <action>set:feat:first-author(nav:features:AU{0}.@value ^ (if nav:features:AU{1}.@value then " et al." else ""))</action>
    <setFeatures/>
  </module>

  <module id="get-first-author-2" class="Action">
    <target>documents[not @first-author]</target>
    <action>set:feat:first-author(sections:author{0}.contents ^ (if sections:author{1}.contents then " et al." else ""))</action>
    <setFeatures/>
  </module>

  <module id="set-title-feature" class="Action">
    <target>documents</target>
    <action>set:feat:title(str:seds(str:seds(str:normalizeSpace(sections[@sectionname == "title"].contents),"\"","%22"),"\\.$",""))</action>
    <setFeatures/>
  </module>

  <module id="rename-year" class="Action">
    <target>documents[@year]</target>
    <action>set:feat:PY(@year)</action>
    <setFeatures/>
  </module>

  <module id="rename-journal" class="Action">
    <target>documents[@journal]</target>
    <action>set:feat:JI(@journal)</action>
    <setFeatures/>
  </module>
  
<!-- Extract relevant entities -->
<import file="/as-d/plans/extract_Wheat_entities.plan"/>

<!-- Print results -->
<writeXML class="XMLWriter">
  <outDir>.</outDir>
  <roots>$</roots>
  <fileName>"tagged_abstracts.csv"</fileName>
  <xslTransform>/as-d/plans/urgiExport.xslt</xslTransform>
  <indent>false</indent>
</writeXML>

<!--Version 2 (no xml tags)-->
<module id="print" class="TabularExport">
  <outDir>.</outDir>
  <files>$</files>
  <fileName>"tagged_abstracts.csv"</fileName>
  <lines>documents[@DI]</lines>
  <separator>,</separator>
  <columns separator=";">
    "Bibliography";
    "OpenMinTeD";
    @DI;
    "1";
    "\"" ^ @first-author ^ " (" ^ @PY ^ "). " ^ @title ^ ". " ^ @JI ^ "                                                  " ^ 
    str:seds(str:normalizeSpace(str:join:' '(document.(sections:TI|sections:AB),contents)),"\"","%22") ^ 
    " " ^ @entities ^ " " ^ @paths ^ "\"";
    "http://oadoi.org/" ^ @DI;
    "Triticum" ^ ",,,,,,,,,,,,,,,,,"
  </columns>
</module>

<!-- Index for AlvisIR -->
  <!-- <module id="index" class="AlvisIRIndexer"> -->
  <!--   <indexDir>index</indexDir> -->
  <!--   <tokenPositionGap>128</tokenPositionGap> -->
  <!--   <fieldNames>title,abstract,author,full-author,doi,year,journal,mesh</fieldNames> -->
  <!--   <propertyKeys/> -->
  <!--   <documents> -->
  <!--     <fields> -->
  <!-- 	<instances>sections</instances> -->
  <!-- 	<field-name>@sectionname</field-name> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:taxa</instances> -->
  <!-- 	  <text>"{taxon}" ^ @taxid ^ "/"</text> -->
  <!-- 	</annotations> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:genes</instances> -->
  <!-- 	  <text>"{gene}" ^ @canonical-form ^ "/"</text> -->
  <!-- 	</annotations> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:markers</instances> -->
  <!-- 	  <text>"{marker}" ^ @canonical-form ^ "/"</text> -->
  <!-- 	</annotations> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:varieties</instances> -->
  <!-- 	  <text>"{variety}" ^ @form ^ "/"</text> -->
  <!-- 	</annotations> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:sentences</instances> -->
  <!-- 	  <text>"{SENT}"</text> -->
  <!-- 	</annotations> -->
  <!-- 	<annotations> -->
  <!-- 	  <instances>layer:phenotypes</instances> -->
  <!-- 	  <text>"{phenotype}" ^ @concept-path ^ "/"</text> -->
  <!-- 	</annotations> -->
  <!--     </fields> -->
  <!--     <fields> -->
  <!-- 	<instances>sections:author</instances> -->
  <!-- 	<field-name>"author"</field-name> -->
  <!-- 	<keyword>contents</keyword> -->
  <!--     </fields> -->
  <!--     <fields> -->
  <!-- 	<instances>$</instances> -->
  <!-- 	<field-name>"doi"</field-name> -->
  <!-- 	<keyword>@id</keyword> -->
  <!--     </fields> -->
  <!--     <fields> -->
  <!-- 	<instances>$[@year]</instances> -->
  <!-- 	<field-name>"year"</field-name> -->
  <!-- 	<keyword>@year</keyword> -->
  <!--     </fields> -->
  <!--     <fields> -->
  <!-- 	<instances>$[@journal]</instances> -->
  <!-- 	<field-name>"journal"</field-name> -->
  <!-- 	<keyword>@journal</keyword> -->
  <!--     </fields> -->
  <!--   </documents> -->
  <!-- </module> -->

  <!-- XMI export -->
  <write class="XMIExport">
    <outDir>.</outDir>
    <typeSystemFile>typesystem.xml</typeSystemFile>
  </write>


</alvisnlp-plan>
